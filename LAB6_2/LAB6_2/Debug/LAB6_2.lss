
LAB6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000194  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000218  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e57  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000be7  00000000  00000000  000010cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a3  00000000  00000000  00001cb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000205c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000551  00000000  00000000  00002080  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000230  00000000  00000000  000025d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002801  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	4c c0       	rjmp	.+152    	; 0x190 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#define TONE_H  506
#define TONE_C  478  // Bruges præcis som du skrev

int main(void)
{
    DDRA = 0x00;
  fa:	11 b8       	out	0x01, r1	; 1
    DDRB = 0xFF;
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	84 b9       	out	0x04, r24	; 4
   
    while (1) 
    {
        if ((PINA & (1 << PA0)) == 0) 
 100:	00 99       	sbic	0x00, 0	; 0
 102:	06 c0       	rjmp	.+12     	; 0x110 <main+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 104:	8f ee       	ldi	r24, 0xEF	; 239
 106:	9e e0       	ldi	r25, 0x0E	; 14
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <main+0xe>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x14>
 10e:	00 00       	nop
        { 
            _delay_us(TONE_c); 
        }

        if ((PINA & (1 << PA1)) == 0) 
 110:	01 99       	sbic	0x00, 1	; 0
 112:	06 c0       	rjmp	.+12     	; 0x120 <main+0x26>
 114:	8b e4       	ldi	r24, 0x4B	; 75
 116:	9d e0       	ldi	r25, 0x0D	; 13
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x1e>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x24>
 11e:	00 00       	nop
        { 
            _delay_us(TONE_D); 
        }

        if ((PINA & (1 << PA2)) == 0) 
 120:	02 99       	sbic	0x00, 2	; 0
 122:	06 c0       	rjmp	.+12     	; 0x130 <main+0x36>
 124:	87 ed       	ldi	r24, 0xD7	; 215
 126:	9b e0       	ldi	r25, 0x0B	; 11
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0x2e>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x34>
 12e:	00 00       	nop
        { 
            _delay_us(TONE_E); 
        }

        if ((PINA & (1 << PA3)) == 0) 
 130:	03 99       	sbic	0x00, 3	; 0
 132:	06 c0       	rjmp	.+12     	; 0x140 <main+0x46>
 134:	8f e2       	ldi	r24, 0x2F	; 47
 136:	9b e0       	ldi	r25, 0x0B	; 11
 138:	01 97       	sbiw	r24, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <main+0x3e>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0x44>
 13e:	00 00       	nop
        { 
            _delay_us(TONE_F); 
        }

        if ((PINA & (1 << PA4)) == 0) 
 140:	04 99       	sbic	0x00, 4	; 0
 142:	06 c0       	rjmp	.+12     	; 0x150 <main+0x56>
 144:	87 ef       	ldi	r24, 0xF7	; 247
 146:	99 e0       	ldi	r25, 0x09	; 9
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0x4e>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0x54>
 14e:	00 00       	nop
        { 
            _delay_us(TONE_G); 
        }

        if ((PINA & (1 << PA5)) == 0) 
 150:	05 99       	sbic	0x00, 5	; 0
 152:	06 c0       	rjmp	.+12     	; 0x160 <main+0x66>
 154:	8f ed       	ldi	r24, 0xDF	; 223
 156:	98 e0       	ldi	r25, 0x08	; 8
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0x5e>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0x64>
 15e:	00 00       	nop
        { 
            _delay_us(TONE_A); 
        }

        if ((PINA & (1 << PA6)) == 0) 
 160:	06 99       	sbic	0x00, 6	; 0
 162:	06 c0       	rjmp	.+12     	; 0x170 <main+0x76>
 164:	87 ee       	ldi	r24, 0xE7	; 231
 166:	97 e0       	ldi	r25, 0x07	; 7
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <main+0x6e>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x74>
 16e:	00 00       	nop
        { 
            _delay_us(TONE_H); 
        }

        if ((PINA & (1 << PA7)) == 0) 
 170:	07 99       	sbic	0x00, 7	; 0
 172:	06 c0       	rjmp	.+12     	; 0x180 <main+0x86>
 174:	87 e7       	ldi	r24, 0x77	; 119
 176:	97 e0       	ldi	r25, 0x07	; 7
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <main+0x7e>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <main+0x84>
 17e:	00 00       	nop
        { 
            _delay_us(TONE_C); 
        }

        // Inverterer PORTB, hvis mindst én knap er trykket
        if ((PINA & 0xFF) != 0xFF) 
 180:	80 b1       	in	r24, 0x00	; 0
 182:	8f 3f       	cpi	r24, 0xFF	; 255
 184:	09 f4       	brne	.+2      	; 0x188 <main+0x8e>
 186:	bc cf       	rjmp	.-136    	; 0x100 <main+0x6>
        { 
            PORTB = ~PORTB; 
 188:	85 b1       	in	r24, 0x05	; 5
 18a:	80 95       	com	r24
 18c:	85 b9       	out	0x05, r24	; 5
 18e:	b8 cf       	rjmp	.-144    	; 0x100 <main+0x6>

00000190 <_exit>:
 190:	f8 94       	cli

00000192 <__stop_program>:
 192:	ff cf       	rjmp	.-2      	; 0x192 <__stop_program>
